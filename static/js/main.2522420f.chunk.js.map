{"version":3,"sources":["Components/Section/Section.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","Components/App.js","index.js","Components/Section/Section.module.css"],"names":["Section","title","children","className","styles","section","FeedbackOptions","option","onLeaveFeedback","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","isFeedback","App","state","handleIncrement","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","Object","keys","map","item","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iTAiBeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,6BAAKJ,IACJC,MCSQI,G,MAbS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBACjC,OACE,wBAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAgBD,IAArD,SACGA,MCAQI,G,MAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,MC6BCC,G,MA5BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAuB,IAAVF,EACnB,OACE,qCACE,4CACCE,EACC,cAAC,EAAD,CAAcP,QAAQ,sBAEtB,qCACE,sCAASE,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,eCgCKE,E,4MA5CbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,gBAAkB,SAAAf,GAChB,EAAKgB,UAAS,SAAAC,GACZ,OAAO,eACJjB,EAASiB,EAAUjB,GAAU,O,4CAKpC,WAAU,IAAD,SACwBkB,KAAKJ,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBU,EAAqBZ,EAAOC,EAAUC,EAEtCW,GACHb,EAAOY,EACR,KACAE,QAAQ,GAEV,OACE,eAAC,EAAD,CAAS3B,MAAM,wBAAf,UACG4B,OAAOC,KAAKL,KAAKJ,OAAOU,KAAI,SAAAC,GAAI,OAC/B,cAAC,EAAD,CAEEzB,OAAQyB,EACRxB,gBAAiB,EAAKc,iBAFjBU,MAKT,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,EACPR,mBAAoBS,W,GAtCZM,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.2522420f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ option, onLeaveFeedback }) => {\r\n  return (\r\n    <button type=\"button\" onClick={() => onLeaveFeedback(option)}>\r\n      {option}\r\n    </button>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  option: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport styles from './Notification.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h3>{message}</h3>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const isFeedback = total === 0;\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      {isFeedback ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <>\r\n          <p>Good:{good}</p>\r\n          <p>Neutral:{neutral}</p>\r\n          <p>Bad:{bad}</p>\r\n          <p>Total:{total}</p>\r\n          <p>Positive feedback:{positivePercentage}%</p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = good + neutral + bad;\n\n    const countPositiveFeedbackPercentage = (\n      (good / countTotalFeedback) *\n      100\n    ).toFixed(1);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        {Object.keys(this.state).map(item => (\n          <FeedbackOptions\n            key={item}\n            option={item}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        ))}\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback}\n          positivePercentage={countPositiveFeedbackPercentage}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n// import \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1oAMV\"};"],"sourceRoot":""}